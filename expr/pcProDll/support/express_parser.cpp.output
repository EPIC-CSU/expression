Useless nonterminals:

   start_stmts
   @4
   end_stmts
   @5
   start_end_stmts
   @6
   @7
   prologue_stmts
   @8
   @9
   start_prologue
   end_prologue
   @10
   epilogue_stmts
   @11
   start_epilogue
   end_epilogue
   start_body
   end_body
   misc_stmt
   begin_scope
   end_scope


Terminals which are not used:

   TT_GLOBAL
   TT_BEGINSCOPE
   TT_ENDSCOPE
   TT_PROLOGUE
   TT_EPILOGUE
   TT_END
   '*'
   '-'
   '/'
   ':'
   '<'
   '='
   '>'
   '['
   ']'
   '\\'


Useless rules:

#14    @4 :	;
#15    start_stmts :	 @4 start_end_stmts;
#16    @5 :	;
#17    end_stmts :	 @5 start_end_stmts;
#18    @6 :	;
#19    start_end_stmts :	 @6 statement_list;
#20    @7 :	;
#21    start_end_stmts :	 @7 '(' ')';
#22    @8 :	;
#23    @9 :	;
#24    prologue_stmts :	 start_prologue @8 statement_list @9 end_prologue;
#25    start_prologue :	 '(' TT_PROLOGUE ')';
#26    @10 :	;
#27    end_prologue :	 '(' @10 TT_END TT_PROLOGUE ')';
#28    @11 :	;
#29    epilogue_stmts :	 start_epilogue @11 statement_list end_epilogue;
#30    start_epilogue :	 '(' TT_EPILOGUE ')';
#31    end_epilogue :	 '(' TT_END TT_EPILOGUE ')';
#34    start_body :	 begin_scope;
#35    end_body :	 end_scope;
#61    misc_stmt :	 begin_scope;
#62    misc_stmt :	 end_scope;
#63    begin_scope :	 '(' TT_BEGINSCOPE ')';
#64    end_scope :	 '(' TT_ENDSCOPE ')';


State 22 contains 1 reduce/reduce conflict.

Grammar
rule 1    program ->		/* empty */
rule 2    program -> routine_list
rule 3    routine_list -> routine
rule 4    @1 ->		/* empty */
rule 5    routine_list -> routine @1 routine_list
rule 6    routine_list -> global_stmts routine_list
rule 7    routine_list -> global_stmts
rule 8    global_stmts -> location_stmt
rule 9    @2 ->		/* empty */
rule 10   @3 ->		/* empty */
rule 11   routine -> '(' TT_PROCBEGIN TT_IDENTIFIER @2 actual_routine @3 ')'
rule 12   actual_routine -> init_stmts routine_body
rule 13   init_stmts -> '(' label_stmt
rule 32   @12 ->		/* empty */
rule 33   routine_body -> @12 statement_list
rule 36   @13 ->		/* empty */
rule 37   @14 ->		/* empty */
rule 38   statement_list -> @13 '(' statement @14 stmt_list
rule 39   @15 ->		/* empty */
rule 40   statement_list -> @15 '(' statement
rule 41   stmt_list -> '(' statement stmt_list
rule 42   stmt_list -> '(' statement
rule 43   @16 ->		/* empty */
rule 44   statement -> @16 location_stmt
rule 45   @17 ->		/* empty */
rule 46   statement -> @17 normal_stmt
rule 47   @18 ->		/* empty */
rule 48   statement -> @18 label_stmt
rule 49   @19 ->		/* empty */
rule 50   statement -> @19 pseudos_stmt
rule 51   label_stmt -> TT_LABEL TT_IDENTIFIER ')'
rule 52   location_stmt -> TT_LOCATION TT_INTEGER ')'
rule 53   @20 ->		/* empty */
rule 54   pseudos_stmt -> TT_PSEUDOS @20 ')'
rule 55   @21 ->		/* empty */
rule 56   pseudos_stmt -> TT_PSEUDOS @21 parm_list ')'
rule 57   parm_list -> parm_one
rule 58   parm_list -> parm_one parm_list
rule 59   parm_one -> '(' TT_parm TT_DOLLAR TT_IDENTIFIER ')'
rule 60   parm_one -> '(' TT_parm TT_DOLLAR TT_INTEGER ')'
rule 65   @22 ->		/* empty */
rule 66   normal_stmt -> TT_IDENTIFIER assertion @22 arg_list ')'
rule 67   @23 ->		/* empty */
rule 68   normal_stmt -> TT_IDENTIFIER @23 arg_list ')'
rule 69   @24 ->		/* empty */
rule 70   @25 ->		/* empty */
rule 71   arg_list -> @24 arg @25 arg_list
rule 72   arg_list ->		/* empty */
rule 73   arg -> arg_val
rule 74   @26 ->		/* empty */
rule 75   arg -> arg_val @26 assertion
rule 76   arg_val -> TT_DOLLAR TT_INTEGER
rule 77   arg_val -> TT_DOLLAR TT_IDENTIFIER
rule 78   arg_val -> TT_INTEGER
rule 79   arg_val -> TT_FLOAT
rule 80   arg_val -> TT_IDENTIFIER
rule 81   arg_val -> TT_IDENTIFIER '+' TT_INTEGER
rule 82   assertion -> type2_assert
rule 83   assertion -> type1_assert
rule 84   type1_assert -> '(' TT_NAME TT_CHARSTRING ',' TT_BASETYPENAME TT_CHARSTRING ')'
rule 85   type2_assert -> '(' TT_NAME TT_CHARSTRING ',' TT_VALUE TT_CHARSTRING ')'

Terminals, with rules where they appear

$ (-1)
'(' (40) 11 13 25 27 30 31 38 40 41 42 59 60 63 64 84 85
')' (41) 11 25 30 31 51 52 54 56 59 60 63 64 66 68 84 85
'*' (42)
'+' (43) 81
',' (44) 84 85
'-' (45)
'/' (47)
':' (58)
'<' (60)
'=' (61)
'>' (62)
'[' (91)
'\\' (92)
']' (93)
error (256)
TT_GLOBAL (258)
TT_PROCBEGIN (259) 11
TT_LOCATION (260) 52
TT_LABEL (261) 51
TT_PSEUDOS (262) 54 56
TT_parm (263) 59 60
TT_BEGINSCOPE (264) 63
TT_ENDSCOPE (265) 64
TT_PROLOGUE (266) 25
TT_EPILOGUE (267) 30 31
TT_END (268) 31
TT_NAME (269) 84 85
TT_BASETYPENAME (270) 84
TT_VALUE (271) 85
TT_DOLLAR (272) 59 60 76 77
TT_INTEGER (273) 52 60 76 78 81
TT_FLOAT (274) 79
TT_CHARSTRING (275) 84 85
TT_IDENTIFIER (276) 11 51 59 66 68 77 80 81

Nonterminals, with rules where they appear

program (36)
    on left: 1 2
routine_list (37)
    on left: 3 5 6 7, on right: 2 5 6
@1 (38)
    on left: 4, on right: 5
global_stmts (39)
    on left: 8, on right: 6 7
routine (40)
    on left: 11, on right: 3 5
@2 (41)
    on left: 9, on right: 11
@3 (42)
    on left: 10, on right: 11
actual_routine (43)
    on left: 12, on right: 11
init_stmts (44)
    on left: 13, on right: 12
routine_body (45)
    on left: 33, on right: 12
@12 (46)
    on left: 32, on right: 33
statement_list (47)
    on left: 38 40, on right: 33
@13 (48)
    on left: 36, on right: 38
@14 (49)
    on left: 37, on right: 38
@15 (50)
    on left: 39, on right: 40
stmt_list (51)
    on left: 41 42, on right: 38 41
statement (52)
    on left: 44 46 48 50, on right: 38 40 41 42
@16 (53)
    on left: 43, on right: 44
@17 (54)
    on left: 45, on right: 46
@18 (55)
    on left: 47, on right: 48
@19 (56)
    on left: 49, on right: 50
label_stmt (57)
    on left: 51, on right: 13 48
location_stmt (58)
    on left: 52, on right: 8 44
pseudos_stmt (59)
    on left: 54 56, on right: 50
@20 (60)
    on left: 53, on right: 54
@21 (61)
    on left: 55, on right: 56
parm_list (62)
    on left: 57 58, on right: 56 58
parm_one (63)
    on left: 59 60, on right: 57 58
normal_stmt (64)
    on left: 66 68, on right: 46
@22 (65)
    on left: 65, on right: 66
@23 (66)
    on left: 67, on right: 68
arg_list (67)
    on left: 71 72, on right: 66 68 71
@24 (68)
    on left: 69, on right: 71
@25 (69)
    on left: 70, on right: 71
arg (70)
    on left: 73 75, on right: 71
@26 (71)
    on left: 74, on right: 75
arg_val (72)
    on left: 76 77 78 79 80 81, on right: 73 75
assertion (73)
    on left: 82 83, on right: 66 75
type1_assert (74)
    on left: 84, on right: 83
type2_assert (75)
    on left: 85, on right: 82


state 0

    TT_LOCATION	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 1 (program)

    program	go to state 96
    routine_list	go to state 3
    global_stmts	go to state 4
    routine	go to state 5
    location_stmt	go to state 6



state 1

    location_stmt  ->  TT_LOCATION . TT_INTEGER ')'   (rule 52)

    TT_INTEGER	shift, and go to state 7



state 2

    routine  ->  '(' . TT_PROCBEGIN TT_IDENTIFIER @2 actual_routine @3 ')'   (rule 11)

    TT_PROCBEGIN	shift, and go to state 8



state 3

    program  ->  routine_list .   (rule 2)

    $default	reduce using rule 2 (program)



state 4

    routine_list  ->  global_stmts . routine_list   (rule 6)
    routine_list  ->  global_stmts .   (rule 7)

    TT_LOCATION	shift, and go to state 1
    '(' 	shift, and go to state 2

    $default	reduce using rule 7 (routine_list)

    routine_list	go to state 9
    global_stmts	go to state 4
    routine	go to state 5
    location_stmt	go to state 6



state 5

    routine_list  ->  routine .   (rule 3)
    routine_list  ->  routine . @1 routine_list   (rule 5)

    $   	reduce using rule 3 (routine_list)
    $default	reduce using rule 4 (@1)

    @1  	go to state 10



state 6

    global_stmts  ->  location_stmt .   (rule 8)

    $default	reduce using rule 8 (global_stmts)



state 7

    location_stmt  ->  TT_LOCATION TT_INTEGER . ')'   (rule 52)

    ')' 	shift, and go to state 11



state 8

    routine  ->  '(' TT_PROCBEGIN . TT_IDENTIFIER @2 actual_routine @3 ')'   (rule 11)

    TT_IDENTIFIER	shift, and go to state 12



state 9

    routine_list  ->  global_stmts routine_list .   (rule 6)

    $default	reduce using rule 6 (routine_list)



state 10

    routine_list  ->  routine @1 . routine_list   (rule 5)

    TT_LOCATION	shift, and go to state 1
    '(' 	shift, and go to state 2

    routine_list	go to state 13
    global_stmts	go to state 4
    routine	go to state 5
    location_stmt	go to state 6



state 11

    location_stmt  ->  TT_LOCATION TT_INTEGER ')' .   (rule 52)

    $default	reduce using rule 52 (location_stmt)



state 12

    routine  ->  '(' TT_PROCBEGIN TT_IDENTIFIER . @2 actual_routine @3 ')'   (rule 11)

    $default	reduce using rule 9 (@2)

    @2  	go to state 14



state 13

    routine_list  ->  routine @1 routine_list .   (rule 5)

    $default	reduce using rule 5 (routine_list)



state 14

    routine  ->  '(' TT_PROCBEGIN TT_IDENTIFIER @2 . actual_routine @3 ')'   (rule 11)

    '(' 	shift, and go to state 15

    actual_routine	go to state 16
    init_stmts	go to state 17



state 15

    init_stmts  ->  '(' . label_stmt   (rule 13)

    TT_LABEL	shift, and go to state 18

    label_stmt	go to state 19



state 16

    routine  ->  '(' TT_PROCBEGIN TT_IDENTIFIER @2 actual_routine . @3 ')'   (rule 11)

    $default	reduce using rule 10 (@3)

    @3  	go to state 20



state 17

    actual_routine  ->  init_stmts . routine_body   (rule 12)

    $default	reduce using rule 32 (@12)

    routine_body	go to state 21
    @12 	go to state 22



state 18

    label_stmt  ->  TT_LABEL . TT_IDENTIFIER ')'   (rule 51)

    TT_IDENTIFIER	shift, and go to state 23



state 19

    init_stmts  ->  '(' label_stmt .   (rule 13)

    $default	reduce using rule 13 (init_stmts)



state 20

    routine  ->  '(' TT_PROCBEGIN TT_IDENTIFIER @2 actual_routine @3 . ')'   (rule 11)

    ')' 	shift, and go to state 24



state 21

    actual_routine  ->  init_stmts routine_body .   (rule 12)

    $default	reduce using rule 12 (actual_routine)



state 22

    routine_body  ->  @12 . statement_list   (rule 33)

    '(' 	reduce using rule 36 (@13)
    '(' 	[reduce using rule 39 (@15)]
    $default	reduce using rule 36 (@13)

    statement_list	go to state 25
    @13 	go to state 26
    @15 	go to state 27



state 23

    label_stmt  ->  TT_LABEL TT_IDENTIFIER . ')'   (rule 51)

    ')' 	shift, and go to state 28



state 24

    routine  ->  '(' TT_PROCBEGIN TT_IDENTIFIER @2 actual_routine @3 ')' .   (rule 11)

    $default	reduce using rule 11 (routine)



state 25

    routine_body  ->  @12 statement_list .   (rule 33)

    $default	reduce using rule 33 (routine_body)



state 26

    statement_list  ->  @13 . '(' statement @14 stmt_list   (rule 38)

    '(' 	shift, and go to state 29



state 27

    statement_list  ->  @15 . '(' statement   (rule 40)

    '(' 	shift, and go to state 30



state 28

    label_stmt  ->  TT_LABEL TT_IDENTIFIER ')' .   (rule 51)

    $default	reduce using rule 51 (label_stmt)



state 29

    statement_list  ->  @13 '(' . statement @14 stmt_list   (rule 38)

    TT_LABEL	reduce using rule 47 (@18)
    TT_PSEUDOS	reduce using rule 49 (@19)
    TT_IDENTIFIER	reduce using rule 45 (@17)
    $default	reduce using rule 43 (@16)

    statement	go to state 31
    @16 	go to state 32
    @17 	go to state 33
    @18 	go to state 34
    @19 	go to state 35



state 30

    statement_list  ->  @15 '(' . statement   (rule 40)

    TT_LABEL	reduce using rule 47 (@18)
    TT_PSEUDOS	reduce using rule 49 (@19)
    TT_IDENTIFIER	reduce using rule 45 (@17)
    $default	reduce using rule 43 (@16)

    statement	go to state 36
    @16 	go to state 32
    @17 	go to state 33
    @18 	go to state 34
    @19 	go to state 35



state 31

    statement_list  ->  @13 '(' statement . @14 stmt_list   (rule 38)

    $default	reduce using rule 37 (@14)

    @14 	go to state 37



state 32

    statement  ->  @16 . location_stmt   (rule 44)

    TT_LOCATION	shift, and go to state 1

    location_stmt	go to state 38



state 33

    statement  ->  @17 . normal_stmt   (rule 46)

    TT_IDENTIFIER	shift, and go to state 39

    normal_stmt	go to state 40



state 34

    statement  ->  @18 . label_stmt   (rule 48)

    TT_LABEL	shift, and go to state 18

    label_stmt	go to state 41



state 35

    statement  ->  @19 . pseudos_stmt   (rule 50)

    TT_PSEUDOS	shift, and go to state 42

    pseudos_stmt	go to state 43



state 36

    statement_list  ->  @15 '(' statement .   (rule 40)

    $default	reduce using rule 40 (statement_list)



state 37

    statement_list  ->  @13 '(' statement @14 . stmt_list   (rule 38)

    '(' 	shift, and go to state 44

    stmt_list	go to state 45



state 38

    statement  ->  @16 location_stmt .   (rule 44)

    $default	reduce using rule 44 (statement)



state 39

    normal_stmt  ->  TT_IDENTIFIER . assertion @22 arg_list ')'   (rule 66)
    normal_stmt  ->  TT_IDENTIFIER . @23 arg_list ')'   (rule 68)

    '(' 	shift, and go to state 46

    $default	reduce using rule 67 (@23)

    @23 	go to state 47
    assertion	go to state 48
    type1_assert	go to state 49
    type2_assert	go to state 50



state 40

    statement  ->  @17 normal_stmt .   (rule 46)

    $default	reduce using rule 46 (statement)



state 41

    statement  ->  @18 label_stmt .   (rule 48)

    $default	reduce using rule 48 (statement)



state 42

    pseudos_stmt  ->  TT_PSEUDOS . @20 ')'   (rule 54)
    pseudos_stmt  ->  TT_PSEUDOS . @21 parm_list ')'   (rule 56)

    '(' 	reduce using rule 55 (@21)
    $default	reduce using rule 53 (@20)

    @20 	go to state 51
    @21 	go to state 52



state 43

    statement  ->  @19 pseudos_stmt .   (rule 50)

    $default	reduce using rule 50 (statement)



state 44

    stmt_list  ->  '(' . statement stmt_list   (rule 41)
    stmt_list  ->  '(' . statement   (rule 42)

    TT_LABEL	reduce using rule 47 (@18)
    TT_PSEUDOS	reduce using rule 49 (@19)
    TT_IDENTIFIER	reduce using rule 45 (@17)
    $default	reduce using rule 43 (@16)

    statement	go to state 53
    @16 	go to state 32
    @17 	go to state 33
    @18 	go to state 34
    @19 	go to state 35



state 45

    statement_list  ->  @13 '(' statement @14 stmt_list .   (rule 38)

    $default	reduce using rule 38 (statement_list)



state 46

    type1_assert  ->  '(' . TT_NAME TT_CHARSTRING ',' TT_BASETYPENAME TT_CHARSTRING ')'   (rule 84)
    type2_assert  ->  '(' . TT_NAME TT_CHARSTRING ',' TT_VALUE TT_CHARSTRING ')'   (rule 85)

    TT_NAME	shift, and go to state 54



state 47

    normal_stmt  ->  TT_IDENTIFIER @23 . arg_list ')'   (rule 68)

    ')' 	reduce using rule 72 (arg_list)
    $default	reduce using rule 69 (@24)

    arg_list	go to state 55
    @24 	go to state 56



state 48

    normal_stmt  ->  TT_IDENTIFIER assertion . @22 arg_list ')'   (rule 66)

    $default	reduce using rule 65 (@22)

    @22 	go to state 57



state 49

    assertion  ->  type1_assert .   (rule 83)

    $default	reduce using rule 83 (assertion)



state 50

    assertion  ->  type2_assert .   (rule 82)

    $default	reduce using rule 82 (assertion)



state 51

    pseudos_stmt  ->  TT_PSEUDOS @20 . ')'   (rule 54)

    ')' 	shift, and go to state 58



state 52

    pseudos_stmt  ->  TT_PSEUDOS @21 . parm_list ')'   (rule 56)

    '(' 	shift, and go to state 59

    parm_list	go to state 60
    parm_one	go to state 61



state 53

    stmt_list  ->  '(' statement . stmt_list   (rule 41)
    stmt_list  ->  '(' statement .   (rule 42)

    '(' 	shift, and go to state 44

    $default	reduce using rule 42 (stmt_list)

    stmt_list	go to state 62



state 54

    type1_assert  ->  '(' TT_NAME . TT_CHARSTRING ',' TT_BASETYPENAME TT_CHARSTRING ')'   (rule 84)
    type2_assert  ->  '(' TT_NAME . TT_CHARSTRING ',' TT_VALUE TT_CHARSTRING ')'   (rule 85)

    TT_CHARSTRING	shift, and go to state 63



state 55

    normal_stmt  ->  TT_IDENTIFIER @23 arg_list . ')'   (rule 68)

    ')' 	shift, and go to state 64



state 56

    arg_list  ->  @24 . arg @25 arg_list   (rule 71)

    TT_DOLLAR	shift, and go to state 65
    TT_INTEGER	shift, and go to state 66
    TT_FLOAT	shift, and go to state 67
    TT_IDENTIFIER	shift, and go to state 68

    arg 	go to state 69
    arg_val	go to state 70



state 57

    normal_stmt  ->  TT_IDENTIFIER assertion @22 . arg_list ')'   (rule 66)

    ')' 	reduce using rule 72 (arg_list)
    $default	reduce using rule 69 (@24)

    arg_list	go to state 71
    @24 	go to state 56



state 58

    pseudos_stmt  ->  TT_PSEUDOS @20 ')' .   (rule 54)

    $default	reduce using rule 54 (pseudos_stmt)



state 59

    parm_one  ->  '(' . TT_parm TT_DOLLAR TT_IDENTIFIER ')'   (rule 59)
    parm_one  ->  '(' . TT_parm TT_DOLLAR TT_INTEGER ')'   (rule 60)

    TT_parm	shift, and go to state 72



state 60

    pseudos_stmt  ->  TT_PSEUDOS @21 parm_list . ')'   (rule 56)

    ')' 	shift, and go to state 73



state 61

    parm_list  ->  parm_one .   (rule 57)
    parm_list  ->  parm_one . parm_list   (rule 58)

    '(' 	shift, and go to state 59

    $default	reduce using rule 57 (parm_list)

    parm_list	go to state 74
    parm_one	go to state 61



state 62

    stmt_list  ->  '(' statement stmt_list .   (rule 41)

    $default	reduce using rule 41 (stmt_list)



state 63

    type1_assert  ->  '(' TT_NAME TT_CHARSTRING . ',' TT_BASETYPENAME TT_CHARSTRING ')'   (rule 84)
    type2_assert  ->  '(' TT_NAME TT_CHARSTRING . ',' TT_VALUE TT_CHARSTRING ')'   (rule 85)

    ',' 	shift, and go to state 75



state 64

    normal_stmt  ->  TT_IDENTIFIER @23 arg_list ')' .   (rule 68)

    $default	reduce using rule 68 (normal_stmt)



state 65

    arg_val  ->  TT_DOLLAR . TT_INTEGER   (rule 76)
    arg_val  ->  TT_DOLLAR . TT_IDENTIFIER   (rule 77)

    TT_INTEGER	shift, and go to state 76
    TT_IDENTIFIER	shift, and go to state 77



state 66

    arg_val  ->  TT_INTEGER .   (rule 78)

    $default	reduce using rule 78 (arg_val)



state 67

    arg_val  ->  TT_FLOAT .   (rule 79)

    $default	reduce using rule 79 (arg_val)



state 68

    arg_val  ->  TT_IDENTIFIER .   (rule 80)
    arg_val  ->  TT_IDENTIFIER . '+' TT_INTEGER   (rule 81)

    '+' 	shift, and go to state 78

    $default	reduce using rule 80 (arg_val)



state 69

    arg_list  ->  @24 arg . @25 arg_list   (rule 71)

    $default	reduce using rule 70 (@25)

    @25 	go to state 79



state 70

    arg  ->  arg_val .   (rule 73)
    arg  ->  arg_val . @26 assertion   (rule 75)

    '(' 	reduce using rule 74 (@26)
    $default	reduce using rule 73 (arg)

    @26 	go to state 80



state 71

    normal_stmt  ->  TT_IDENTIFIER assertion @22 arg_list . ')'   (rule 66)

    ')' 	shift, and go to state 81



state 72

    parm_one  ->  '(' TT_parm . TT_DOLLAR TT_IDENTIFIER ')'   (rule 59)
    parm_one  ->  '(' TT_parm . TT_DOLLAR TT_INTEGER ')'   (rule 60)

    TT_DOLLAR	shift, and go to state 82



state 73

    pseudos_stmt  ->  TT_PSEUDOS @21 parm_list ')' .   (rule 56)

    $default	reduce using rule 56 (pseudos_stmt)



state 74

    parm_list  ->  parm_one parm_list .   (rule 58)

    $default	reduce using rule 58 (parm_list)



state 75

    type1_assert  ->  '(' TT_NAME TT_CHARSTRING ',' . TT_BASETYPENAME TT_CHARSTRING ')'   (rule 84)
    type2_assert  ->  '(' TT_NAME TT_CHARSTRING ',' . TT_VALUE TT_CHARSTRING ')'   (rule 85)

    TT_BASETYPENAME	shift, and go to state 83
    TT_VALUE	shift, and go to state 84



state 76

    arg_val  ->  TT_DOLLAR TT_INTEGER .   (rule 76)

    $default	reduce using rule 76 (arg_val)



state 77

    arg_val  ->  TT_DOLLAR TT_IDENTIFIER .   (rule 77)

    $default	reduce using rule 77 (arg_val)



state 78

    arg_val  ->  TT_IDENTIFIER '+' . TT_INTEGER   (rule 81)

    TT_INTEGER	shift, and go to state 85



state 79

    arg_list  ->  @24 arg @25 . arg_list   (rule 71)

    ')' 	reduce using rule 72 (arg_list)
    $default	reduce using rule 69 (@24)

    arg_list	go to state 86
    @24 	go to state 56



state 80

    arg  ->  arg_val @26 . assertion   (rule 75)

    '(' 	shift, and go to state 46

    assertion	go to state 87
    type1_assert	go to state 49
    type2_assert	go to state 50



state 81

    normal_stmt  ->  TT_IDENTIFIER assertion @22 arg_list ')' .   (rule 66)

    $default	reduce using rule 66 (normal_stmt)



state 82

    parm_one  ->  '(' TT_parm TT_DOLLAR . TT_IDENTIFIER ')'   (rule 59)
    parm_one  ->  '(' TT_parm TT_DOLLAR . TT_INTEGER ')'   (rule 60)

    TT_INTEGER	shift, and go to state 88
    TT_IDENTIFIER	shift, and go to state 89



state 83

    type1_assert  ->  '(' TT_NAME TT_CHARSTRING ',' TT_BASETYPENAME . TT_CHARSTRING ')'   (rule 84)

    TT_CHARSTRING	shift, and go to state 90



state 84

    type2_assert  ->  '(' TT_NAME TT_CHARSTRING ',' TT_VALUE . TT_CHARSTRING ')'   (rule 85)

    TT_CHARSTRING	shift, and go to state 91



state 85

    arg_val  ->  TT_IDENTIFIER '+' TT_INTEGER .   (rule 81)

    $default	reduce using rule 81 (arg_val)



state 86

    arg_list  ->  @24 arg @25 arg_list .   (rule 71)

    $default	reduce using rule 71 (arg_list)



state 87

    arg  ->  arg_val @26 assertion .   (rule 75)

    $default	reduce using rule 75 (arg)



state 88

    parm_one  ->  '(' TT_parm TT_DOLLAR TT_INTEGER . ')'   (rule 60)

    ')' 	shift, and go to state 92



state 89

    parm_one  ->  '(' TT_parm TT_DOLLAR TT_IDENTIFIER . ')'   (rule 59)

    ')' 	shift, and go to state 93



state 90

    type1_assert  ->  '(' TT_NAME TT_CHARSTRING ',' TT_BASETYPENAME TT_CHARSTRING . ')'   (rule 84)

    ')' 	shift, and go to state 94



state 91

    type2_assert  ->  '(' TT_NAME TT_CHARSTRING ',' TT_VALUE TT_CHARSTRING . ')'   (rule 85)

    ')' 	shift, and go to state 95



state 92

    parm_one  ->  '(' TT_parm TT_DOLLAR TT_INTEGER ')' .   (rule 60)

    $default	reduce using rule 60 (parm_one)



state 93

    parm_one  ->  '(' TT_parm TT_DOLLAR TT_IDENTIFIER ')' .   (rule 59)

    $default	reduce using rule 59 (parm_one)



state 94

    type1_assert  ->  '(' TT_NAME TT_CHARSTRING ',' TT_BASETYPENAME TT_CHARSTRING ')' .   (rule 84)

    $default	reduce using rule 84 (type1_assert)



state 95

    type2_assert  ->  '(' TT_NAME TT_CHARSTRING ',' TT_VALUE TT_CHARSTRING ')' .   (rule 85)

    $default	reduce using rule 85 (type2_assert)



state 96

    $   	go to state 97



state 97

    $   	go to state 98



state 98

    $default	accept
